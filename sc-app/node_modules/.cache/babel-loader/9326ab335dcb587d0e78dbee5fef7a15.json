{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0443\\u0447\\u0451\\u0431\\u0430\\\\4\\\\webSS\\\\sc-app\\\\src\\\\Components\\\\Tree123.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useState } from 'react';\nimport 'react-simple-tree-menu/dist/main.css';\nimport axios from \"axios\";\nimport TreeMenu, { defaultChildren, ItemComponent } from 'react-simple-tree-menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tree123(_ref) {\n  _s();\n\n  let {\n    goal_url\n  } = _ref;\n  const [treeData, settreeData] = React.useState(null);\n  axios({\n    // Endpoint to send files\n    url: \" http://localhost:5000/\" + goal_url,\n    method: \"GET\",\n    headers: {}\n  }).then(res => {\n    if (JSON.stringify(res.data) !== JSON.stringify(treeData)) settreeData(res.data);\n  }) // Handle the response from backend here\n  .catch(err => {\n    alert(\"все плохо\");\n  }); // Catch errors if any\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TreeMenu, {\n      data: treeData,\n      onClickItem: p => {\n        alert(p);\n      },\n      children: _ref2 => {\n        let {\n          search,\n          items,\n          resetOpenNodes\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetOpenNodes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }, this), defaultChildren({\n            search,\n            items\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n}\n/*<treeViewMenu\r\n        data={treeData}\r\n        onClickItem={({ key, label, ...props }) => {\r\n          this.navigate(props.url); // user defined prop\r\n        }\r\n      }\r\n        debounceTime={125}>\r\n          {({ search, items }) => (\r\n              <>\r\n                <input onChange={e => search(e.target.value)} placeholder=\"Type and search\" />\r\n                <listGroup>\r\n                  {items.map(props => (\r\n                    <listItem {...props}  onClickItem ={()=>{alert(\"1\")}} />\r\n                  ))}\r\n                </listGroup>\r\n              </>\r\n          )}\r\n      </treeViewMenu>*/\n\n_s(Tree123, \"JZBfBgPKeU2hDJRGNfn+24HRhic=\");\n\n_c = Tree123;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree123\");","map":{"version":3,"names":["React","Component","useState","axios","TreeMenu","defaultChildren","ItemComponent","Tree123","goal_url","treeData","settreeData","url","method","headers","then","res","JSON","stringify","data","catch","err","alert","p","search","items","resetOpenNodes"],"sources":["D:/учёба/4/webSS/sc-app/src/Components/Tree123.js"],"sourcesContent":["import React, { Component} from 'react';\r\nimport { useState } from 'react';\r\nimport 'react-simple-tree-menu/dist/main.css';\r\nimport axios from \"axios\" ;\r\nimport TreeMenu, { defaultChildren, ItemComponent } from 'react-simple-tree-menu';\r\nexport default function Tree123({goal_url})\r\n  {\r\n    const [treeData,settreeData] = React.useState(null);\r\n    axios({\r\n      // Endpoint to send files\r\n      url: \" http://localhost:5000/\" + goal_url ,\r\n      method: \"GET\" ,\r\n      headers: {},\r\n      })\r\n      .then((res) => { if (JSON.stringify(res.data) !== JSON.stringify(treeData)) settreeData (res.data)}) // Handle the response from backend here\r\n      . catch ((err) => { alert (\"все плохо\")}); // Catch errors if any\r\n    \r\n    return (\r\n      <div>\r\n        <TreeMenu data={treeData} onClickItem ={(p)=>{alert(p)}}>\r\n      {({ search, items, resetOpenNodes }) => (\r\n        <div>\r\n          <button onClick={resetOpenNodes} />\r\n          {defaultChildren({search, items})}\r\n        </div>\r\n      )}\r\n  </TreeMenu>\r\n\r\n      \r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n/*<treeViewMenu\r\n        data={treeData}\r\n        onClickItem={({ key, label, ...props }) => {\r\n          this.navigate(props.url); // user defined prop\r\n        }\r\n      }\r\n        debounceTime={125}>\r\n          {({ search, items }) => (\r\n              <>\r\n                <input onChange={e => search(e.target.value)} placeholder=\"Type and search\" />\r\n                <listGroup>\r\n                  {items.map(props => (\r\n                    <listItem {...props}  onClickItem ={()=>{alert(\"1\")}} />\r\n                  ))}\r\n                </listGroup>\r\n              </>\r\n          )}\r\n      </treeViewMenu>*/"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,eAAnB,EAAoCC,aAApC,QAAyD,wBAAzD;;AACA,eAAe,SAASC,OAAT,OACb;EAAA;;EAAA,IAD8B;IAACC;EAAD,CAC9B;EACE,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBV,KAAK,CAACE,QAAN,CAAe,IAAf,CAA/B;EACAC,KAAK,CAAC;IACJ;IACAQ,GAAG,EAAE,4BAA4BH,QAF7B;IAGJI,MAAM,EAAE,KAHJ;IAIJC,OAAO,EAAE;EAJL,CAAD,CAAL,CAMGC,IANH,CAMSC,GAAD,IAAS;IAAE,IAAIC,IAAI,CAACC,SAAL,CAAeF,GAAG,CAACG,IAAnB,MAA6BF,IAAI,CAACC,SAAL,CAAeR,QAAf,CAAjC,EAA2DC,WAAW,CAAEK,GAAG,CAACG,IAAN,CAAX;EAAuB,CANrG,EAMuG;EANvG,CAOIC,KAPJ,CAOYC,GAAD,IAAS;IAAEC,KAAK,CAAE,WAAF,CAAL;EAAoB,CAP1C,EAFF,CAS+C;;EAE7C,oBACE;IAAA,uBACE,QAAC,QAAD;MAAU,IAAI,EAAEZ,QAAhB;MAA0B,WAAW,EAAIa,CAAD,IAAK;QAACD,KAAK,CAACC,CAAD,CAAL;MAAS,CAAvD;MAAA,UACD;QAAA,IAAC;UAAEC,MAAF;UAAUC,KAAV;UAAiBC;QAAjB,CAAD;QAAA,oBACC;UAAA,wBACE;YAAQ,OAAO,EAAEA;UAAjB;YAAA;YAAA;YAAA;UAAA,QADF,EAEGpB,eAAe,CAAC;YAACkB,MAAD;YAASC;UAAT,CAAD,CAFlB;QAAA;UAAA;UAAA;UAAA;QAAA,QADD;MAAA;IADC;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA/CwBjB,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}